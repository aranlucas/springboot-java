plugins {
	id "java"
	id "com.diffplug.spotless" version "6.21.0"
	id "io.freefair.lombok" version "8.3"
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.springframework.boot' version '3.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

tasks.jar {
	enabled = false
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.projectlombok:lombok:1.18.30'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.springframework.boot:spring-boot-gradle-plugin:3.1.4'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.modulith:spring-modulith-starter-core'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.modulith:spring-modulith-bom:1.1.1'
	}
}

spotless {
	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		importOrder()
		removeUnusedImports()

		cleanthat()
		// apply a specific flavor of google-java-format
		googleJavaFormat().aosp()
		// fix formatting of type annotations
		formatAnnotations()
	}
}
